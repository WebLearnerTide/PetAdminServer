<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ctide.pet.Dao.NewsMapper" >
  <resultMap id="BaseResultMap" type="cn.ctide.pet.Model.News" >
    <id column="news_id" property="newsId" jdbcType="INTEGER" />
    <result column="news_title" property="newsTitle" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.ctide.pet.Model.News" extends="BaseResultMap" >
    <result column="news_content" property="newsContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    news_id, news_title
  </sql>
  <sql id="Blob_Column_List" >
    news_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where news_id = #{newsId,jdbcType=INTEGER}
  </select>
    <select id="selectRandom" resultMap="ResultMapWithBLOBs">
      select * from (select
      <include refid="Base_Column_List"/>
      ,
      <include refid="Blob_Column_List"/>
      from news
      <where>
        <trim prefixOverrides="AND|OR">
          <foreach collection="list" item="item">
            OR news_title LIKE concat('%', #{item.petcName}, '%')
          </foreach>
        </trim>
      </where>) t  ORDER BY RAND()  LIMIT 20
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from news
    where news_id = #{newsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.ctide.pet.Model.News" >
    insert into news (news_id, news_title, news_content
      )
    values (#{newsId,jdbcType=INTEGER}, #{newsTitle,jdbcType=VARCHAR}, #{newsContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.ctide.pet.Model.News" >
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="newsId != null" >
        news_id,
      </if>
      <if test="newsTitle != null" >
        news_title,
      </if>
      <if test="newsContent != null" >
        news_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="newsId != null" >
        #{newsId,jdbcType=INTEGER},
      </if>
      <if test="newsTitle != null" >
        #{newsTitle,jdbcType=VARCHAR},
      </if>
      <if test="newsContent != null" >
        #{newsContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ctide.pet.Model.News" >
    update news
    <set >
      <if test="newsTitle != null" >
        news_title = #{newsTitle,jdbcType=VARCHAR},
      </if>
      <if test="newsContent != null" >
        news_content = #{newsContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where news_id = #{newsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.ctide.pet.Model.News" >
    update news
    set news_title = #{newsTitle,jdbcType=VARCHAR},
      news_content = #{newsContent,jdbcType=LONGVARCHAR}
    where news_id = #{newsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ctide.pet.Model.News" >
    update news
    set news_title = #{newsTitle,jdbcType=VARCHAR}
    where news_id = #{newsId,jdbcType=INTEGER}
  </update>
</mapper>